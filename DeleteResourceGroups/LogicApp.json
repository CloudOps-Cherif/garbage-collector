{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Name": {
      "type": "string",
      "defaultValue": "delete-rg-logic",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "RecurrenceFrequency": {
      "type": "string",
      "defaultValue": "Minute"
    },
    "RecurrenceInterval": {
      "type": "int",
      "defaultValue": 1
    },
    "StorageAccount": {
      "type": "string",
      "defaultValue": "garbagecollector",
      "metadata": {
        "description": "The name of your storage account"
      }
    },
    "MailAccount": {
      "type": "string",
      "defaultValue": "Terminator@stefanroth.net"
    }
  },
  "variables": {
    "azuretables_connection_name": "[concat(parameters('storageaccount'),'-connection')]",
    "logic_app_location": "[resourceGroup().location]",
    "office365_connection_name": "office365"
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('name')]",
      "location": "[variables('logic_app_location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections',variables('azuretables_connection_name'))]",
        "[resourceId('Microsoft.Web/connections', variables('office365_connection_name'))]"
      ],
      "properties": {
        "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "$connections": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "triggers": {
        "Recurrence": {
            "recurrence": {
                "frequency": "Minute",
                "interval": 1
            },
            "type": "Recurrence",
            "inputs": {}
        }
    },
    "actions": {
        "Filter_Array": {
            "runAfter": {
                "Parse_'Get_Entities'_JSON": [
                    "Succeeded"
                ]
            },
            "type": "Query",
          "inputs": {
            "from": "@body('Parse_''Get_Entities''_JSON')",
            "where": "@and(less(addDays(item()['CreationDate'],7), utcNow()),less(addDays(item()['NotificationDate'],1), utcNow()),equals(item()['Deleted'],false),equals(item()['Autodelete'],'true'))"
          }
        },
        "Get_Entities": {
            "runAfter": {},
            "type": "ApiConnection",
            "inputs": {
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['azuretables']['connectionId']"
                    }
                },
                "method": "get",
                "path": "/Tables/@{encodeURIComponent('garbagecollector')}/entities"
            }
        },
        "Loop_Entities": {
            "foreach": "@body('Parse_JSON')",
            "actions": {
                "If_Resource_Group_Exists": {
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Send_Information_Mail": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "body": {
                                        //"Body": "<p>Hi<br>\n<br>\nWe would like to inform you, that your resource group has expired after the offical 7-days of creation. You will get @{sub(2,items('Loop_Entities')['DeclineCount'])} more reminder(s ) after the last reminder your resource group \"@{items('Loop_Entities')['RowKey']}\" will be deleted.<br>\n<br>\n<strong>After each reminder you have 1-days to take action.</strong><br>\n<br>\nIf want to keep your resources, please contact Cloud Brokerage.<br>\n<br>\nBest regards,<br>\n<br>\nCloud Brokerage<br>\n</p>",
                                        "Body": "<p>Guten Tag<br>\n<br>\nWir moechten Sie daran erinnern, das&nbsp;die Ressourcen Gruppe jetzt nach 7-Tagen abgelaufen ist und geloescht wird. Sie werden noch @{sub(2,items('Loop_Entities')['DeclineCount'])} Erinnerungen erhalten. Nach der letzten Erinnerung wird die Ressourcen Gruppe @{items('Loop_Entities')['RowKey']} geloescht.<br>\n<strong>Die Erinnerungen werden im Abstand von 1-Tagen versendet und Sie haben jeweils Zeit um Schritte zu unternehmen.</strong><br>\n<br>\nMoechten Sie die Ressourcen behalten, dann kontaktieren Sie bitte die Cloud Brokerage.<br>\n<br>\nVielen Dank.<br>\n<br>\nCloud Brokerage&nbsp;<br>\n<br>\n------------------<br>\n<br>\nHi<br>\n<br>\nWe would like to inform you, that your resource group has expired after the offical 7-days of creation. You will get&nbsp;@{sub(2,items('Loop_Entities')['DeclineCount'])}&nbsp;more reminder(s) after the last reminder your resource group @{items('Loop_Entities')['RowKey']} will be deleted.<br>\n<strong>After each reminder you have 1-days to take action.</strong><br>\n<br>\nIf want to keep your resources, please contact Cloud Brokerage.<br>\n<br>\nBest regards,<br>\n<br>\nCloud Brokerage</p>",
                                        "Importance": "High",
                                        "Subject": "Reminder Azure Resource Group @{items('Loop_Entities')['RowKey']} (Subscripion: @{items('Loop_Entities')['PartitionKey']})",
                                        "To": "@items('Loop_Entities')['Owner']"
                                        
                                      },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                },
                                "Update_Decline_Count": {
                                    "runAfter": {
                                        "Send_Information_Mail": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "DeclineCount": "@add(items('Loop_Entities')?['DeclineCount'],1)",
                                            "LastCheckedDate": "@{utcNow()}",
                                            "NotificationDate": "@{utcNow()}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuretables']['connectionId']"
                                            }
                                        },
                                        "method": "patch",
                                        "path": "/Tables/@{encodeURIComponent('garbagecollector')}/entities(PartitionKey='@{encodeURIComponent(items('Loop_Entities')['PartitionKey'])}',RowKey='@{encodeURIComponent(items('Loop_Entities')['RowKey'])}')"
                                    }
                                }
                            },
                            "runAfter": {},
                            "else": {
                                "actions": {
                                    "Delete_Resource_Group": {
                                        "runAfter": {},
                                        "type": "Http",
                                        "inputs": {
                                            "authentication": {
                                                "type": "ManagedServiceIdentity"
                                            },
                                            "headers": {
                                                "content-type": "application/json"
                                            },
                                            "method": "DELETE",
                                            "uri": "https://management.azure.com/subscriptions/@{items('Loop_Entities')['PartitionKey']}/resourcegroups/@{items('Loop_Entities')['RowKey']}?api-version=2019-05-10"
                                        }
                                    },
                                    "Send_Deletion_Mail": {
                                      "runAfter": {
                                        "Delete_Resource_Group": [
                                          "Succeeded"
                                        ]
                                      },
                                        "type": "ApiConnection",
                                        "inputs": {
                                          "body": {
                                            //"Body": "<p><span style=\"color: rgb(0,0,0)\">Hi &nbsp;<br>\n<br>\nYou own the resource group \"</span><span style=\"color: rgb(0,0,0)\">@{items('Loop_Entities')['RowKey']}</span><span style=\"color: rgb(0,0,0)\">\" &nbsp;in Azure subscription \"</span><span style=\"color: rgb(0,0,0)\">@{items('Loop_Entities')['PartitionKey']}</span><span style=\"color: rgb(0,0,0)\">\". &nbsp;<br>\n<br>\n</span><strong>This resource group was created on </strong><strong>@{items('Loop_Entities')['CreationDate']}</strong><strong> and has been deleted after reminding 3 times.<br>\n</strong><span style=\"color: rgb(0,0,0)\"><br>\nIf you need support, please contact Cloud Brokerage.<br>\n<br>\nBest regards,<br>\n<br>\nCloud Brokerage</span></p>",
                                            "Body": "<p><span style=\"color: rgb(0,0,0)\">Guten Tag<br>\n<br>\nSie sind der Besitzer der Ressourcen Gruppe </span><span style=\"color: rgb(0,0,0)\">@{items('Loop_Entities')['RowKey']}</span><span style=\"color: rgb(0,0,0)\"> in der Subscription </span><span style=\"color: rgb(0,0,0)\">@{items('Loop_Entities')['PartitionKey']}</span><span style=\"color: rgb(0,0,0)\">.<br>\n<br>\nDiese Ressourcen Gruppe wurde am </span><span style=\"color: rgb(0,0,0)\">@{items('Loop_Entities')['CreationDate']}</span><span style=\"color: rgb(0,0,0)\"> erstellt und wurde nach 3 Erinnerungen geloescht.<br>\n<br>\nFalls Sie Unterstuetzung brauchen, kontaktieren Sie bitte die Cloud Brokerage.<br>\n<br>\nVielen Dank,<br>\n<br>\nCloud Brokerage<br>\n<br>\n------------------<br>\n<br>\nHi &nbsp;<br>\n<br>\nYou own the resource group </span><span style=\"color: rgb(0,0,0)\">@{items('Loop_Entities')['RowKey']}</span><span style=\"color: rgb(0,0,0)\"> in Azure subscription </span><span style=\"color: rgb(0,0,0)\">@{items('Loop_Entities')['PartitionKey']}</span><span style=\"color: rgb(0,0,0)\">. &nbsp;<br>\n<br>\nThis resource group was created on </span><span style=\"color: rgb(0,0,0)\">@{items('Loop_Entities')['CreationDate']}</span><span style=\"color: rgb(0,0,0)\"> and has been deleted after reminding 3 times.<br>\n<br>\nIf you need support, please contact Cloud Brokerage.<br>\n<br>\nBest regards,<br>\n<br>\nCloud Brokerage</span></p>",
                                            "Importance": "High",
                                            "Subject": "Deleted: Resource Group @{items('Loop_Entities')['RowKey']} (Subscripion: @{items('Loop_Entities')['PartitionKey']}) ",
                                            "To": "@items('Loop_Entities')['Owner']"
                                          },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/v2/Mail"
                                        }
                                    },
                                    "Update_Deletion_Properties": {
                                        "runAfter": {
                                            "Send_Deletion_Mail": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "DeclineCount": "@add(items('Loop_Entities')?['DeclineCount'],1)",
                                                "Deleted": true,
                                                "DeletionDate": "@{utcNow()}",
                                                "LastCheckedDate": "@{utcNow()}"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuretables']['connectionId']"
                                                }
                                            },
                                            "method": "patch",
                                            "path": "/Tables/@{encodeURIComponent('garbagecollector')}/entities(PartitionKey='@{encodeURIComponent(items('Loop_Entities')['PartitionKey'])}',RowKey='@{encodeURIComponent(items('Loop_Entities')['RowKey'])}')"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "less": [
                                            "@items('Loop_Entities')['DeclineCount']",
                                            3
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "runAfter": {
                        "Resource_Group_Exists": [
                            "Succeeded",
                            "Failed"
                        ]
                    },
                    "else": {
                        "actions": {
                            "Resource_Group_Deleted": {
                                "runAfter": {},
                                "type": "ApiConnection",
                                "inputs": {
                                    "body": {
                                        "DeclineCount": "@add(items('Loop_Entities')?['DeclineCount'],1)",
                                        "Deleted": true,
                                        "DeletionDate": "@{utcNow()}",
                                        "LastCheckedDate": "@{utcNow()}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azuretables']['connectionId']"
                                        }
                                    },
                                    "method": "patch",
                                    "path": "/Tables/@{encodeURIComponent('garbagecollector')}/entities(PartitionKey='@{encodeURIComponent(items('Loop_Entities')['PartitionKey'])}',RowKey='@{encodeURIComponent(items('Loop_Entities')['RowKey'])}')"
                                }
                            }
                        }
                    },
                    "expression": {
                        "and": [
                            {
                                "equals": [
                                    "@outputs('Resource_Group_Exists')['statusCode']",
                                    200
                                ]
                            }
                        ]
                    },
                    "type": "If"
                },
                "Resource_Group_Exists": {
                    "runAfter": {},
                    "type": "Http",
                    "inputs": {
                        "authentication": {
                            "type": "ManagedServiceIdentity"
                        },
                        "headers": {
                            "content-type": "application/json"
                        },
                        "method": "GET",
                        "uri": "https://management.azure.com/subscriptions/@{items('Loop_Entities')['PartitionKey']}/resourcegroups/@{items('Loop_Entities')['RowKey']}?api-version=2019-05-10"
                    }
                }
            },
            "runAfter": {
                "Parse_JSON": [
                    "Succeeded"
                ]
            },
            "type": "Foreach"
        },
        "Parse_'Get_Entities'_JSON": {
            "runAfter": {
                "Get_Entities": [
                    "Succeeded"
                ]
            },
            "type": "ParseJson",
            "inputs": {
                "content": "@body('Get_Entities')?['value']",
                "schema": {
                    "items": {
                      "properties": {
                        "CreationDate": {
                          "type": "string"
                        },
                        "CreationDate@odata.type": {
                          "type": "string"
                        },
                        "DeclineCount": {
                          "type": "integer"
                        },
                        "Deleted": {
                          "type": "boolean"
                        },
                        "DeletionDate": {
                          "type": "string"
                        },
                        "DeletionDate@odata.type": {
                          "type": "string"
                        },
                        "LastCheckedDate": {
                          "type": "string"
                        },
                        "LastCheckedDate@odata.type": {
                          "type": "string"
                        },
                        "Name": {
                          "type": "string"
                        },
                        "NotificationDate": {
                          "type": "string"
                        },
                        "NotificationDate@odata.type": {
                          "type": "string"
                        },
                        "Owner": {
                          "type": "string"
                        },
                        "PartitionKey": {
                          "type": "string"
                        },
                        "RowKey": {
                          "type": "string"
                        },
                        "Timestamp": {
                          "type": "string"
                        },
                        "Autodelete": {
                          "type": "string"
                        },
                        "odata.etag": {
                          "type": "string"
                        }
                      },
                        "required": [
                            "odata.etag",
                            "PartitionKey",
                            "RowKey",
                            "Timestamp",
                            "CreationDate",
                            "DeclineCount",
                            "Deleted",
                            "DeletionDate",
                            "LastCheckedDate",
                            "Name",
                            "NotificationDate",
                            "Owner",
                            "Autodelete"
                             ],
                        "type": "object"
                    },
                    "type": "array"
                }
            }
        },
        "Parse_JSON": {
            "runAfter": {
                "Filter_Array": [
                    "Succeeded"
                ]
            },
            "type": "ParseJson",
            "inputs": {
                "content": "@body('Filter_Array')",
                "schema": {
                    "items": {
                        "properties": {
                            "CreationDate": {
                                "type": "string"
                            },
                            "DeclineCount": {
                                "type": "integer"
                            },
                            "Deleted": {
                                "type": "boolean"
                            },
                            "DeletionDate": {
                                "type": "string"
                            },
                            "LastCheckedDate": {
                                "type": "string"
                            },
                            "Name": {
                                "type": "string"
                            },
                            "NotificationDate": {
                                "type": "string"
                            },
                            "Owner": {
                                "type": "string"
                            },
                            "PartitionKey": {
                                "type": "string"
                            },
                            "RowKey": {
                                "type": "string"
                            },
                            "Timestamp": {
                                "type": "string"
                            },
                            "odata.etag": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "odata.etag",
                            "PartitionKey",
                            "RowKey",
                            "Timestamp",
                            "CreationDate",
                            "DeclineCount",
                            "Deleted",
                            "DeletionDate",
                            "LastCheckedDate",
                            "Name",
                            "NotificationDate",
                            "Owner"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            }
        }
    },
    "outputs": {}
},
        "parameters": {
          "$connections": {
            "value": {
              "azuretables": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('logic_app_location'),'/managedApis/azuretables')]",
                "connectionId": "[resourceId('Microsoft.Web/connections',variables('azuretables_connection_name'))]",
                "connectionName": "[variables('azuretables_connection_name')]"
              },
              "office365": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('logic_app_location'),'/managedApis/office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365_connection_name'))]",
                "connectionName": "[variables('office365_connection_name')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[variables('logic_app_location')]",
      "name": "[variables('office365_connection_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('logic_app_location'),'/managedApis/office365')]"
        },
        "displayName": "[parameters('mailaccount')]"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[variables('logic_app_location')]",
      "name": "[variables('azuretables_connection_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',variables('logic_app_location'),'/managedApis/azuretables')]"
        },
        "displayName": "[concat(parameters('storageaccount'),'tablestorage')]",
        "parameterValues": {
          "storageaccount": "[parameters('storageaccount')]",
          "sharedkey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount')), '2018-02-01').keys[0].value]"
        }
      }
    },
    {
      "name": "[parameters('storageaccount')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-07-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('storageaccount')]"
      },
      "kind": "StorageV2"
    }
  ],
  "outputs": {}
}
